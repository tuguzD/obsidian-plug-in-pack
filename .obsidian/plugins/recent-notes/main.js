/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var b=Object.defineProperty;var R=Object.getOwnPropertyDescriptor;var x=Object.getOwnPropertyNames;var M=Object.prototype.hasOwnProperty;var P=(g,p)=>{for(var e in p)b(g,e,{get:p[e],enumerable:!0})},k=(g,p,e,t)=>{if(p&&typeof p=="object"||typeof p=="function")for(let i of x(p))!M.call(g,i)&&i!==e&&b(g,i,{get:()=>p[i],enumerable:!(t=R(p,i))||t.enumerable});return g};var _=g=>k(b({},"__esModule",{value:!0}),g);var O={};P(O,{default:()=>C});module.exports=_(O);var n=require("obsidian"),r=require("obsidian"),$={maxNotesToShow:100,showMarkdownFiles:!0,showImageFiles:!0,showPDFFiles:!0,showAudioFiles:!0,showVideoFiles:!0,showCanvasFiles:!0,showCSVFiles:!0,excludedFolders:[],excludedFiles:[],previewLines:1,pinnedNotes:[]},T="recent-notes-view",N=class extends n.ItemView{constructor(e,t){super(e);this.refreshTimeout=null;this.lastActiveFile=null;this.firstLineCache=new Map;this.MAX_FILE_SIZE_FOR_PREVIEW=100*1024;this.CACHE_DURATION=5*60*1e3;this.lastEditedFile=null;this.debouncedRefresh=()=>{this.refreshTimeout&&clearTimeout(this.refreshTimeout),this.refreshTimeout=setTimeout(()=>{this.refreshView(),this.refreshTimeout=null},20)};this.plugin=t,this.containerEl.addClass("recent-notes-view")}clearOldCache(){let e=Date.now();for(let[t,i]of this.firstLineCache.entries())e-i.timestamp>this.CACHE_DURATION&&this.firstLineCache.delete(t)}shouldRefreshForFile(e){if(!e)return!1;let t=e.path.toLowerCase();if(this.plugin.settings.excludedFolders.some(c=>{let h=c.toLowerCase().trim();return h&&t.startsWith(h+"/")})||this.plugin.settings.excludedFiles.some(c=>{let h=c.toLowerCase().trim();return h&&t===h}))return!1;let a=e.extension.toLowerCase();return this.plugin.settings.showMarkdownFiles&&a==="md"||this.plugin.settings.showImageFiles&&["png","jpg","jpeg","gif","bmp","svg"].includes(a)||this.plugin.settings.showPDFFiles&&a==="pdf"||this.plugin.settings.showAudioFiles&&["mp3","wav","m4a","ogg","3gp","flac","webm","aac"].includes(a)||this.plugin.settings.showVideoFiles&&["mp4","webm","ogv","mov","mkv"].includes(a)||this.plugin.settings.showCanvasFiles&&a==="canvas"||this.plugin.settings.showCSVFiles&&a==="csv"}clearCache(){this.firstLineCache.clear()}getViewType(){return T}getDisplayText(){return"Recent notes"}getIcon(){return"clock-10"}cleanMarkdownFormatting(e){return e=e.replace(/^#+\s+/g,""),e=e.replace(/[*_]{1,3}([^*_]+)[*_]{1,3}/g,"$1"),e=e.replace(/~~([^~]+)~~/g,"$1"),e=e.replace(/^[-*_]{3,}\s*$/g,""),e=e.replace(/\[([^\]]+)\]\([^)]+\)/g,"$1"),e=e.replace(/`+/g,""),e=e.replace(/^>\s+/g,""),e=e.replace(/^- \[[x ]\]\s+/i,""),e=e.replace(/^[-*+]\s+/g,""),e=e.replace(/^\d+\.\s+/g,""),e=e.replace(/https?:\/\//g,""),e=e.replace(/www\./g,""),e.trim()}async getFirstLineOfFile(e){var l,a,c,h;let t=e.extension.toLowerCase();if(t!=="md"){let u=e.stat.size,o="";if(u<1024?o=`${u} B`:u<1024*1024?o=`${(u/1024).toFixed(1)} KB`:o=`${(u/(1024*1024)).toFixed(1)} MB`,["png","jpg","jpeg","gif","bmp","svg"].includes(t))return`Image file \u2022 ${o}`;if(t==="pdf")return`PDF document \u2022 ${o}`;if(["mp3","wav","m4a","ogg","3gp","flac","webm","aac"].includes(t))return`Audio file \u2022 ${o}`;if(["mp4","webm","ogv","mov","mkv"].includes(t))return`Video file \u2022 ${o}`;if(t==="canvas")return"Canvas file";if(t==="csv"){if(e.stat.size>this.MAX_FILE_SIZE_FOR_PREVIEW)return`CSV file \u2022 ${o}`;let f=this.firstLineCache.get(e.path);if(f&&Date.now()-f.timestamp<this.CACHE_DURATION)return f.line;try{let s=(l=(await this.app.vault.cachedRead(e)).split(`
`)[0])==null?void 0:l.trim();if(s){let w=`CSV \u2022 ${s.length>50?s.slice(0,47)+"...":s} \u2022 ${o}`;return this.firstLineCache.set(e.path,{line:w,timestamp:Date.now()}),w}return`CSV file \u2022 ${o}`}catch(m){return`CSV file \u2022 ${o}`}}return`${t.toUpperCase()} file \u2022 ${o}`}if(e.stat.size>this.MAX_FILE_SIZE_FOR_PREVIEW)return"Large markdown file";let i=this.firstLineCache.get(e.path);if(i&&Date.now()-i.timestamp<this.CACHE_DURATION)return i.line;try{let o=(await this.app.vault.cachedRead(e)).split(`
`),f=0;if(((a=o[0])==null?void 0:a.trim())==="---"){for(let s=1;s<o.length;s++)if(((c=o[s])==null?void 0:c.trim())==="---"){f=s+1;break}}let m=[];for(let s=f;s<o.length&&m.length<this.plugin.settings.previewLines;s++){let d=(h=o[s])==null?void 0:h.trim();if(d&&d!=="---"){let w=this.cleanMarkdownFormatting(d);w&&m.push(w)}}if(m.length>0){let s=m.join(`
`);return this.firstLineCache.set(e.path,{line:s,timestamp:Date.now()}),s}return"No additional text"}catch(u){return"Error reading file"}}getTimeSection(e){let t=(0,r.moment)();return e.isSame(t,"day")?"Today":e.isSame(t.subtract(1,"day"),"day")?"Yesterday":e.isAfter(t.subtract(7,"days"))?"Previous 7 days":e.isAfter(t.subtract(30,"days"))?"Previous 30 days":e.isSame(t,"year")?e.format("MMMM"):e.format("YYYY")}scrollToTodaySection(){let e=this.containerEl.children[1],t=Array.from(e.querySelectorAll("h6"));for(let i of t)if(i.textContent==="Today"){e.scrollTop>300&&i.scrollIntoView({behavior:"smooth",block:"start"});break}}async refreshView(){var m;let e=this.containerEl.children[1],t=e.scrollTop;e.empty();let i=this.app.vault.getFiles().filter(s=>this.shouldRefreshForFile(s)).sort((s,d)=>d.stat.mtime-s.stat.mtime).slice(0,this.plugin.settings.maxNotesToShow),l=i.filter(s=>this.plugin.settings.pinnedNotes.includes(s.path)),a=i.filter(s=>!this.plugin.settings.pinnedNotes.includes(s.path)),c="",h=this.app.workspace.getActiveFile(),u=this.lastEditedFile&&((m=i[0])==null?void 0:m.path)===this.lastEditedFile,o=i[0]&&this.plugin.settings.pinnedNotes.includes(i[0].path);h&&(this.lastActiveFile=h.path);let f=h?h.path:this.lastActiveFile;if(l.length>0){e.createEl("h6",{text:"Pinned"});for(let s of l){let d=e.createEl("div",{cls:`recent-note-item ${f===s.path?"is-active":""}`}),w=d.createEl("div",{text:s.basename,cls:"recent-note-title"}),F=this.plugin.settings.previewLines>1,y=d.createEl("div",{cls:`recent-note-info ${F?"has-multiple-lines":""}`}),S=(0,r.moment)(),v;this.getTimeSection((0,r.moment)(s.stat.mtime))==="Today"?v=(0,r.moment)(s.stat.mtime).format("HH:mm"):this.getTimeSection((0,r.moment)(s.stat.mtime))==="Yesterday"?v=(0,r.moment)(s.stat.mtime).format("HH:mm"):(0,r.moment)(s.stat.mtime).isAfter(S.subtract(7,"days"))?v=(0,r.moment)(s.stat.mtime).format("dddd"):v=(0,r.moment)(s.stat.mtime).format("DD/MM/YYYY");let V=await this.getFirstLineOfFile(s),E=y.createEl("div",{cls:`recent-note-preview ${F?"has-multiple-lines":""}`});V.split(`
`).forEach(L=>{E.createEl("div",{text:L,cls:"recent-note-preview-line"})});let A=y.createEl("span",{text:v,cls:F?"recent-note-date recent-note-date-below":"recent-note-date"});this.addFileItemEventListeners(d,s)}c=""}for(let s of a){let d=(0,r.moment)(s.stat.mtime),w=this.getTimeSection(d);w!==c&&(c=w,e.createEl("h6",{text:w}));let F=e.createEl("div",{cls:`recent-note-item ${f===s.path?"is-active":""}`}),y=F.createEl("div",{text:s.basename,cls:"recent-note-title"}),S=this.plugin.settings.previewLines>1,v=F.createEl("div",{cls:`recent-note-info ${S?"has-multiple-lines":""}`}),V=(0,r.moment)(),E;this.getTimeSection((0,r.moment)(s.stat.mtime))==="Today"?E=(0,r.moment)(s.stat.mtime).format("HH:mm"):this.getTimeSection((0,r.moment)(s.stat.mtime))==="Yesterday"?E=(0,r.moment)(s.stat.mtime).format("HH:mm"):(0,r.moment)(s.stat.mtime).isAfter(V.subtract(7,"days"))?E=(0,r.moment)(s.stat.mtime).format("dddd"):E=(0,r.moment)(s.stat.mtime).format("DD/MM/YYYY");let A=await this.getFirstLineOfFile(s),L=v.createEl("div",{cls:`recent-note-preview ${S?"has-multiple-lines":""}`});A.split(`
`).forEach(I=>{L.createEl("div",{text:I,cls:"recent-note-preview-line"})});let Y=v.createEl("span",{text:E,cls:S?"recent-note-date recent-note-date-below":"recent-note-date"});this.addFileItemEventListeners(F,s)}u&&!o?this.scrollToTodaySection():e.scrollTop=t,this.lastEditedFile=null}addFileItemEventListeners(e,t){e.addEventListener("mousedown",async i=>{if(i.button!==0)return;i.preventDefault(),i.stopPropagation(),await this.app.workspace.getLeaf(i.metaKey||i.ctrlKey).openFile(t),t.extension!=="md"&&setTimeout(()=>{this.debouncedRefresh()},50)}),e.addEventListener("contextmenu",i=>{i.preventDefault();let l=new n.Menu,a=this.plugin.settings.pinnedNotes.includes(t.path);l.addItem(c=>{c.setIcon(a?"pin-off":"pin").setTitle(a?"Unpin":"Pin").onClick(async()=>{a?this.plugin.settings.pinnedNotes=this.plugin.settings.pinnedNotes.filter(h=>h!==t.path):this.plugin.settings.pinnedNotes.push(t.path),await this.plugin.saveSettings(),this.refreshView()})}),l.addItem(c=>{c.setIcon("trash").setTitle("Delete").onClick(async()=>{!await this.app.vault.adapter.exists(t.path)||!confirm(`Are you sure you want to delete "${t.path}"?`)||(await this.app.fileManager.trashFile(t),this.refreshView())})}),l.addSeparator(),this.app.workspace.trigger("file-menu",l,t,"recent-notes-view",null),l.showAtPosition({x:i.clientX,y:i.clientY})})}async onOpen(){this.registerInterval(window.setInterval(()=>this.clearOldCache(),this.CACHE_DURATION)),await this.refreshView(),this.registerEvent(this.app.vault.on("modify",e=>{e instanceof n.TFile&&(this.firstLineCache.delete(e.path),this.lastEditedFile=e.path);let t=this.app.workspace.getActiveFile();this.shouldRefreshForFile(t)&&this.debouncedRefresh()})),this.registerEvent(this.app.vault.on("create",e=>{e instanceof n.TFile&&this.shouldRefreshForFile(e)&&this.debouncedRefresh()})),this.registerEvent(this.app.vault.on("delete",e=>{e instanceof n.TFile&&this.shouldRefreshForFile(e)&&this.debouncedRefresh()})),this.registerEvent(this.app.vault.on("rename",e=>{e instanceof n.TFile&&this.shouldRefreshForFile(e)&&this.debouncedRefresh()})),this.registerEvent(this.app.workspace.on("active-leaf-change",()=>{let e=this.app.workspace.getActiveFile();this.shouldRefreshForFile(e)&&this.debouncedRefresh()}))}async onClose(){this.refreshTimeout&&clearTimeout(this.refreshTimeout)}},C=class extends n.Plugin{async onload(){await this.loadSettings(),this.registerView(T,e=>this.view=new N(e,this)),this.addRibbonIcon("clock-10","Recent notes",()=>{this.activateView()}),this.addCommand({id:"show-recent-notes",name:"Open",callback:()=>{this.activateView()}}),this.addSettingTab(new D(this.app,this))}async activateView(){let{workspace:e}=this.app,t=e.getLeavesOfType(T)[0];t||(t=e.getRightLeaf(!1),t&&await t.setViewState({type:T,active:!0})),t&&e.revealLeaf(t)}async loadSettings(){this.settings=Object.assign({},$,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}},D=class extends n.PluginSettingTab{constructor(e,t){super(e,t);this.plugin=t}display(){let{containerEl:e}=this;e.empty(),new n.Setting(e).setName("Maximum notes to show").setDesc("How many recent notes to display in the view").addText(t=>t.setPlaceholder("100").setValue(this.plugin.settings.maxNotesToShow.toString()).onChange(async i=>{let l=parseInt(i);isNaN(l)||(this.plugin.settings.maxNotesToShow=l,await this.plugin.saveSettings(),this.plugin.view&&await this.plugin.view.refreshView())})),new n.Setting(e).setName("Preview lines").setDesc("Number of text lines to show in the preview (1-3)").addDropdown(t=>t.addOption("1","1 line").addOption("2","2 lines").addOption("3","3 lines").setValue(this.plugin.settings.previewLines.toString()).onChange(async i=>{this.plugin.settings.previewLines=parseInt(i),await this.plugin.saveSettings(),this.plugin.view&&(this.plugin.view.clearCache(),await this.plugin.view.refreshView())})),new n.Setting(e).setName("Excluded folders").setDesc("List of folders to exclude from recent files (one per line)").addTextArea(t=>t.setPlaceholder(`folder1
folder2/subfolder`).setValue(this.plugin.settings.excludedFolders.join(`
`)).onChange(async i=>{let l=i.split(`
`).map(a=>a.trim()).filter(a=>a.length>0);this.plugin.settings.excludedFolders=l,await this.plugin.saveSettings(),this.plugin.view&&await this.plugin.view.refreshView()})),new n.Setting(e).setName("Excluded files").setDesc("List of specific files to exclude from recent files (one per line, full path required)").addTextArea(t=>t.setPlaceholder(`folder1/note.md
folder2/image.png`).setValue(this.plugin.settings.excludedFiles.join(`
`)).onChange(async i=>{let l=i.split(`
`).map(a=>a.trim()).filter(a=>a.length>0);this.plugin.settings.excludedFiles=l,await this.plugin.saveSettings(),this.plugin.view&&await this.plugin.view.refreshView()})),e.createEl("h3",{text:"File types to show"}),new n.Setting(e).setName("Show Markdown files").setDesc("Show .md files in the recent list").addToggle(t=>t.setValue(this.plugin.settings.showMarkdownFiles).onChange(async i=>{this.plugin.settings.showMarkdownFiles=i,await this.plugin.saveSettings(),this.plugin.view&&await this.plugin.view.refreshView()})),new n.Setting(e).setName("Show Image files").setDesc("Show image files (png, jpg, gif, etc.) in the recent list").addToggle(t=>t.setValue(this.plugin.settings.showImageFiles).onChange(async i=>{this.plugin.settings.showImageFiles=i,await this.plugin.saveSettings(),this.plugin.view&&await this.plugin.view.refreshView()})),new n.Setting(e).setName("Show PDF files").setDesc("Show .pdf files in the recent list").addToggle(t=>t.setValue(this.plugin.settings.showPDFFiles).onChange(async i=>{this.plugin.settings.showPDFFiles=i,await this.plugin.saveSettings(),this.plugin.view&&await this.plugin.view.refreshView()})),new n.Setting(e).setName("Show Audio files").setDesc("Show audio files (mp3, wav, etc.) in the recent list").addToggle(t=>t.setValue(this.plugin.settings.showAudioFiles).onChange(async i=>{this.plugin.settings.showAudioFiles=i,await this.plugin.saveSettings(),this.plugin.view&&await this.plugin.view.refreshView()})),new n.Setting(e).setName("Show Video files").setDesc("Show video files (mp4, webm, etc.) in the recent list").addToggle(t=>t.setValue(this.plugin.settings.showVideoFiles).onChange(async i=>{this.plugin.settings.showVideoFiles=i,await this.plugin.saveSettings(),this.plugin.view&&await this.plugin.view.refreshView()})),new n.Setting(e).setName("Show Canvas files").setDesc("Show .canvas files in the recent list").addToggle(t=>t.setValue(this.plugin.settings.showCanvasFiles).onChange(async i=>{this.plugin.settings.showCanvasFiles=i,await this.plugin.saveSettings(),this.plugin.view&&await this.plugin.view.refreshView()})),new n.Setting(e).setName("Show CSV files").setDesc("Show .csv files in the recent list").addToggle(t=>t.setValue(this.plugin.settings.showCSVFiles).onChange(async i=>{this.plugin.settings.showCSVFiles=i,await this.plugin.saveSettings(),this.plugin.view&&await this.plugin.view.refreshView()}))}};
