/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var c=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var w=Object.getOwnPropertyNames;var f=Object.prototype.hasOwnProperty;var T=(r,s)=>{for(var t in s)c(r,t,{get:s[t],enumerable:!0})},P=(r,s,t,e)=>{if(s&&typeof s=="object"||typeof s=="function")for(let n of w(s))!f.call(r,n)&&n!==t&&c(r,n,{get:()=>s[n],enumerable:!(e=g(s,n))||e.enumerable});return r};var y=r=>P(c({},"__esModule",{value:!0}),r);var x={};T(x,{default:()=>d});module.exports=y(x);var a=require("obsidian"),b={maxPreviewHeight:400,maxPreviewWidth:600,hoverDelay:500},d=class extends a.Plugin{async onload(){await this.loadSettings(),this.app.workspace.onLayoutReady(()=>{this.registerGlobalHandler()}),this.addSettingTab(new v(this.app,this))}registerGlobalHandler(){let t=e=>{this.registerDomEvent(e,"mouseover",this.handleLinkHover.bind(this)),this.registerDomEvent(e,"keydown",n=>{n.key===(a.Platform.isMacOS?"Meta":"Control")&&this.handleModifierKey(!0)}),this.registerDomEvent(e,"keyup",n=>{n.key===(a.Platform.isMacOS?"Meta":"Control")&&this.handleModifierKey(!1)})};t(document),this.registerEvent(this.app.workspace.on("window-open",({win:e})=>t(e.document)))}handleModifierKey(t){let e="link-preview-modifier-pressed";t?document.body.classList.add(e):document.body.classList.remove(e)}handleLinkHover(t){var o;let e=t.target;if(!(e instanceof HTMLAnchorElement)||!e.classList.contains("external-link")||!e.href||(this.hoverTimeout&&window.clearTimeout(this.hoverTimeout),((o=this.activePreview)==null?void 0:o.link)===e))return;this.cleanupActivePreview(),this.hoverTimeout=window.setTimeout(()=>{this.showPreview(e)},this.settings.hoverDelay);let i=h=>{var m;let l=h.relatedTarget;(m=this.activePreview)!=null&&m.element.contains(l)||(this.startCleanupTimer(),e.removeEventListener("mouseleave",i))};e.addEventListener("mouseleave",i)}showPreview(t){let e=t.href,n=t.getBoundingClientRect(),i=this.createPreviewElement(n),o=i.createDiv("preview-iframe-wrapper"),h=i.createDiv("preview-loading");h.addClass("loading-spinner");let l=createEl("iframe",{attr:{src:e,style:"display: none;"}});o.appendChild(l);let m=()=>{i.remove(),this.activePreview=void 0};l.onload=()=>{l.style.display="block",h.style.display="none"},l.onerror=()=>{h.textContent="Failed to load preview"},i.addEventListener("mouseenter",()=>{this.cleanupTimeout&&(window.clearTimeout(this.cleanupTimeout),this.cleanupTimeout=void 0)}),i.addEventListener("mouseleave",()=>{this.startCleanupTimer()}),document.body.appendChild(i),this.activePreview={element:i,cleanup:m,link:t}}startCleanupTimer(){this.cleanupTimeout&&window.clearTimeout(this.cleanupTimeout),this.cleanupTimeout=window.setTimeout(()=>{this.cleanupActivePreview(),this.cleanupTimeout=void 0},300)}cleanupActivePreview(){this.activePreview&&(this.activePreview.cleanup(),this.activePreview=void 0),this.hoverTimeout&&(window.clearTimeout(this.hoverTimeout),this.hoverTimeout=void 0),this.cleanupTimeout&&(window.clearTimeout(this.cleanupTimeout),this.cleanupTimeout=void 0)}async loadSettings(){this.settings=Object.assign({},b,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}onunload(){this.cleanupActivePreview()}createPreviewElement(t){let e=createEl("div",{cls:"hover-popup"}),n={width:window.innerWidth,height:window.innerHeight},i=this.calculatePreviewBounds(t,n);return e.style.cssText=`
            left: ${i.left}px;
            top: ${i.top}px;
            width: ${i.width}px;
            height: ${i.height}px;
        `,e}calculatePreviewBounds(t,e){let i=Math.min(this.settings.maxPreviewWidth,e.width-10),o=Math.min(this.settings.maxPreviewHeight,e.height-5*2),h=e.height-t.bottom-5,l=t.top-5,m=h<o&&l>h,p=m?Math.max(5,t.top-o-5):Math.min(t.bottom+5,e.height-o-5),u=t.left;return u+i>e.width-5&&(u=e.width-i-5),u=Math.max(5,u),{left:u,top:p,width:i,height:o,showAbove:m}}},v=class extends a.PluginSettingTab{constructor(t,e){super(t,e);this.plugin=e}display(){let{containerEl:t}=this;t.empty(),new a.Setting(t).setName("Hover delay").setDesc("Delay before showing preview (in ms)").addText(e=>e.setPlaceholder("500").setValue(String(this.plugin.settings.hoverDelay)).onChange(async n=>{let i=Number(n);!isNaN(i)&&i>=0&&(this.plugin.settings.hoverDelay=i,await this.plugin.saveSettings())})),new a.Setting(t).setName("Maximum height").setDesc("Maximum height of preview window (in px)").addText(e=>e.setPlaceholder("300").setValue(String(this.plugin.settings.maxPreviewHeight)).onChange(async n=>{this.plugin.settings.maxPreviewHeight=Number(n),await this.plugin.saveSettings()})),new a.Setting(t).setName("Maximum width").setDesc("Maximum width of preview window (in px)").addText(e=>e.setPlaceholder("400").setValue(String(this.plugin.settings.maxPreviewWidth)).onChange(async n=>{this.plugin.settings.maxPreviewWidth=Number(n),await this.plugin.saveSettings()}))}};

/* nosourcemap */